(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const t=function(){function t(e){var n=e.baseUrl,r=e.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=n,this._headers=r}var n,r;return n=t,(r=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Error!"+e.statusText)}},{key:"getInitialCards",value:function(){return fetch(this._baseUrl+"/cards",{headers:this._headers}).then(this._checkResponse)}},{key:"getUserInfo",value:function(){return fetch(this._baseUrl+"/users/me",{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"addCard",value:function(e){var t=e.name,n=e.link;return fetch(this._baseUrl+"/cards",{headers:this._headers,method:"POST",body:JSON.stringify({name:t,link:n})}).then(this._checkResponse)}},{key:"deleteCard",value:function(e){return fetch(this._baseUrl+"/cards/"+e,{headers:this._headers,method:"DELETE"}).then(this._checkResponse)}},{key:"editProfile",value:function(e){var t=e.name,n=e.about;return fetch(this._baseUrl+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:n})}).then(this._checkResponse)}},{key:"editAvatar",value:function(e){var t=e.avatar;return fetch(this._baseUrl+"/users/me/avatar",{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:t})}).then(this._checkResponse)}},{key:"addLike",value:function(e){return fetch(this._baseUrl+"/cards/likes/"+e,{headers:this._headers,method:"PUT"}).then(this._checkResponse)}},{key:"removeLike",value:function(e){return fetch(this._baseUrl+"/cards/likes/"+e,{headers:this._headers,method:"DELETE"}).then(this._checkResponse)}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=n,this._inputs=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._button=this._formElement.querySelector(this._submitButtonSelector)}var t,r;return t=e,(r=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.classList.add(this._errorClass),n.textContent=t}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_isValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput(this._inputs)?(this._button.classList.add(this._inactiveButtonClass),this._button.disabled=!0):(this._button.classList.remove(this._inactiveButtonClass),this._button.disabled=!1)}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputs.forEach((function(t){e._hideInputError(t)}))}},{key:"_setEventListeners",value:function(){var e=this;this._inputs.forEach((function(t){t.addEventListener("input",(function(){e._isValid(t),e._toggleButtonState()}))})),this._formElement.addEventListener("submit",(function(e){e.preventDefault()}))}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&n(t.prototype,r),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const i=function(){function e(t){var n=t.cardData,r=t.handleCardClick,o=t.handleDeleteCardClick,i=t.handleLikeCardClick,a=t.userId,c=t.cardTemplateSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=n.name,this._link=n.link,this._id=n._id,this._handleCardClick=r,this._handleDeleteCardClick=o,this._handleLikeCardClick=i,this._totalLikes=n.likes.length,this._id=n._id,this._user=n._id,this._userId=a,this._ownerId=n.owner._id,this._owner=n.owner,this._likesArray=n.likes,this._cardTemplateSelector=c}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardTemplateSelector).content.querySelector(".elements__item")}},{key:"_getId",value:function(){return this._id}},{key:"handleTrashButton",value:function(e){e.target.closest(".elements__item").remove()}},{key:"_showTrashIcon",value:function(){this._ownerId!==this._userId&&this._card.querySelector(".elements__delete-button").remove()}},{key:"toggleLikeButton",value:function(e){e.classList.toggle("elements__like_active")}},{key:"displayTotalLikes",value:function(e){this._card.querySelector(".elements__like-counter").textContent=e}},{key:"_handleCardLikes",value:function(){var e=this,t=this._card.querySelector(".elements__like");Array.from(this._likesArray).forEach((function(n){n._id===e._userId&&t.classList.add("elements__like_active")}))}},{key:"_setEventListeners",value:function(){var e=this,t=this._card.querySelector(".elements__like"),n=this._card.querySelector(".elements__image"),r=this._card.querySelector(".elements__delete-button");t.addEventListener("click",(function(){return e._handleLikeCardClick(t,e._getId())})),r.addEventListener("click",(function(t){return e._handleDeleteCardClick(t)})),n.addEventListener("click",(function(){return e._handleCardClick()}))}},{key:"generateCard",value:function(){return this._card=this._getTemplate().cloneNode(!0),this._cardImage=this._card.querySelector(".elements__image"),this._cardImageTitle=this._card.querySelector(".elements__title"),this._card.querySelector(".elements__like-counter").textContent=this._totalLikes,this._cardImageTitle.textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._handleCardLikes(),this._setEventListeners(),this._showTrashIcon(),this._card}}])&&o(t.prototype,n),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const c=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._escapeToCloseModal=this._escapeToCloseModal.bind(this)}var t,n;return t=e,(n=[{key:"openModal",value:function(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._escapeToCloseModal)}},{key:"closeModal",value:function(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._escapeToCloseModal)}},{key:"_escapeToCloseModal",value:function(e){"Escape"===e.key&&this.closeModal()}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".modal__close-button").addEventListener("click",(function(){e.closeModal()})),this._popup.addEventListener("click",(function(t){t.target.classList.contains("modal")&&e.closeModal()}))}}])&&a(t.prototype,n),e}();function l(e){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(e,t,n){return(u="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function d(e,t){return!t||"object"!==l(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function h(e){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}const _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h(r);if(o){var n=h(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return d(this,e)});function a(e){var t,n=e.popupSelector,r=e.formSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._formSubmit=r,t._form=t._popup.querySelector(".modal__form"),t._saveButton=t._popup.querySelector(".modal__form-submit"),t._buttonText=t._saveButton.textContent,t}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputList=this._form.querySelectorAll(".modal__form-control"),this._formValues={},this._inputList.forEach((function(t){return e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._saveButton.textContent="Saving...",e._formSubmit(e._getInputValues())})),u(h(a.prototype),"setEventListeners",this).call(this)}},{key:"closeModal",value:function(){this._saveButton.textContent=this._buttonText,this._form.reset(),u(h(a.prototype),"closeModal",this).call(this)}},{key:"setSubmitAction",value:function(e){this._formSubmit=e}}])&&s(t.prototype,n),a}(c);function p(e){return(p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function y(e,t,n){return(y="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function v(e,t){return(v=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function b(e,t){return!t||"object"!==p(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function k(e){return(k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}const g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&v(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(r);if(o){var n=k(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return b(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._modalPicture=t._popup.querySelector(".modal__image"),t._modalCaption=t._popup.querySelector(".modal__image-title"),t}return t=a,(n=[{key:"openModal",value:function(e,t){this._modalPicture.src=t,this._modalPicture.alt=e,this._modalCaption.textContent=e,y(k(a.prototype),"openModal",this).call(this)}}])&&m(t.prototype,n),a}(c);function S(e){return(S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function w(e,t,n){return(w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=O(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function E(e,t){return(E=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function L(e,t){return!t||"object"!==S(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function O(e){return(O=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}const I=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&E(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=O(r);if(o){var n=O(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return L(this,e)});function a(e){var t,n=e.popupSelector,r=e.formSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._form=t._popup.querySelector(".modal__form"),t._formSubmit=r,t}return t=a,(n=[{key:"openModal",value:function(e,t){w(O(a.prototype),"openModal",this).call(this),this._cardId=t,this._card=e.target.parentElement}},{key:"setEventListeners",value:function(){var e=this;w(O(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._formSubmit(e._card,e._cardId)}))}}])&&C(t.prototype,n),a}(c);function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const P=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._cardContainer=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderer",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._cardContainer.prepend(e)}}])&&T(t.prototype,n),e}();function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const q=function(){function e(t){var n=t.name,r=t.about,o=t.avatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._about=document.querySelector(r),this._avatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about,r=e.avatar;this._name.textContent=t,this._about.textContent=n,this._avatar.src=r}}])&&j(t.prototype,n),e}();var R=document.querySelector(".profile__edit"),M=document.querySelector(".profile__add"),B=document.querySelector(".profile__image-edit"),x=document.querySelector(".modal__form_type_profile"),U=x.querySelector(".modal__form-control_input_name"),A=x.querySelector(".modal__form-control_input_occupation"),V=(document.querySelector(".profile__name"),document.querySelector(".profile__occupation"),document.querySelector(".modal__form_type_profile")),D=document.querySelector(".addCard-form"),N=document.querySelector(".modal__form_type_avatar"),J={formSelector:".modal__form",inputSelector:".modal__form-control",submitButtonSelector:".modal__form-submit",inactiveButtonClass:"modal__form-submit_disabled",inputErrorClass:"modal__form-control_error",errorClass:"modal__error"};function H(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var z=new r(J,V),G=new r(J,D),$=new r(J,N);z.enableValidation(),G.enableValidation(),$.enableValidation();var F=new t({baseUrl:"https://around.nomoreparties.co/v1/group-10",headers:{authorization:"3e6a2d00-5fce-4033-96ec-e7320045c084","Content-Type":"application/json"}});Promise.all([F.getUserInfo(),F.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,i=void 0;try{for(var a,c=e[Symbol.iterator]();!(r=(a=c.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==c.return||c.return()}finally{if(o)throw i}}return n}}(t,n)||function(e,t){if(e){if("string"==typeof e)return H(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?H(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],a=r[1],c=new q({name:".profile__name",about:".profile__occupation",avatar:".profile__image"});c.setUserInfo({name:o.name,about:o.about,avatar:o.avatar}),c.userId=o._id;var l=new P({items:a,renderer:function(e){l.addItem(d(e))}},".elements__container");l.renderer();var s=new _({popupSelector:".modal_type_create",formSubmit:function(e){F.addCard({name:e.titleInput,link:e.imageLinkInput}).then((function(e){var t=d(e);l.addItem(t),s.closeModal()})).catch((function(e){console.log(e)}))}}),u=new _({popupSelector:".modal_type_edit",formSubmit:function(e){F.editProfile({name:e.profileNameInput,about:e.profileOccupationInput}).then((function(e){c.setUserInfo(e),u.closeModal()})).catch((function(e){console.log(e)}))}}),f=new I({popupSelector:".modal_type_delete",formSubmit:function(e,t){F.deleteCard(t).then((function(){e.remove(t),f.closeModal()})).catch((function(e){console.log(e)}))}});function d(e){var t=new i({cardData:e,handleCardClick:function(){p.openModal(e.name,e.link)},handleDeleteCardClick:function(e){f.openModal(e,t._id)},handleLikeCardClick:function(e,n){e.classList.contains("elements__like_active")?F.removeLike(n).then((function(n){t.displayTotalLikes(n.likes.length),t.toggleLikeButton(e)})).catch((function(e){console.log(e)})):F.addLike(n).then((function(n){t.displayTotalLikes(n.likes.length),t.toggleLikeButton(e)})).catch((function(e){console.log(e)}))},userId:c.userId,cardTemplateSelector:".card-template"});return t.generateCard()}var h=new _({popupSelector:".modal_type_avatar",formSubmit:function(e){F.editAvatar({avatar:e.avatarInput}).then((function(e){c.setUserInfo({name:e.name,about:e.about,avatar:e.avatar}),h.closeModal()})).catch((function(e){console.log(e)}))}}),p=new g(".modal_type_preview");s.setEventListeners(),u.setEventListeners(),h.setEventListeners(),f.setEventListeners(),p.setEventListeners(),B.addEventListener("click",(function(){h.openModal(),$.resetValidation()})),M.addEventListener("click",(function(){s.openModal(),G.resetValidation()})),R.addEventListener("click",(function(){u.openModal();var e=c.getUserInfo(),t=e.name,n=e.about;U.value=t,A.value=n,z.resetValidation()}))})).catch((function(e){console.log(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,